#-----------------------------------------------------------
# Vivado v2024.2 (64-bit)
# SW Build 5239630 on Fri Nov 08 22:35:27 MST 2024
# IP Build 5239520 on Sun Nov 10 16:12:51 MST 2024
# SharedData Build 5239561 on Fri Nov 08 14:39:27 MST 2024
# Start of session at: Thu May 15 13:04:18 2025
# Process ID         : 40792
# Current directory  : C:/Users/wuche/Desktop/CODE/dat096/C2_image_compressing/saperate_module/3_quantization/synthesis_tests
# Command line       : vivado.exe -mode batch -source run_synthesis.tcl -tclargs
# Log file           : C:/Users/wuche/Desktop/CODE/dat096/C2_image_compressing/saperate_module/3_quantization/synthesis_tests/vivado.log
# Journal file       : C:/Users/wuche/Desktop/CODE/dat096/C2_image_compressing/saperate_module/3_quantization/synthesis_tests\vivado.jou
# Running On         : wenruoxu
# Platform           : Windows Server 2016 or Windows 10
# Operating System   : 26100
# Processor Detail   : AMD Ryzen 9 7950X 16-Core Processor            
# CPU Frequency      : 4491 MHz
# CPU Physical cores : 16
# CPU Logical cores  : 32
# Host memory        : 50621 MB
# Swap memory        : 3221 MB
# Total Virtual      : 53842 MB
# Available Virtual  : 21455 MB
#-----------------------------------------------------------
source run_synthesis.tcl
# set module_list {}
# set module_file ""
# set part_name "xc7z020clg484-1"
# set rtl_dir "../rtl"
# set nthreads 32
# set report_dir "./reports"
# set fast_mode 1  
# for {set i 0} {$i < $argc} {incr i} {
#     set arg [lindex $argv $i]
#     switch -exact -- $arg {
#         "-modules" {
#             incr i
#             set module_list [lindex $argv $i]
#         }
#         "-module_file" {
#             incr i
#             set module_file [lindex $argv $i]
#         }
#         "-part" {
#             incr i
#             set part_name [lindex $argv $i]
#         }
#         "-rtl_dir" {
#             incr i
#             set rtl_dir [lindex $argv $i]
#         }
#         "-nthreads" {
#             incr i
#             set nthreads [lindex $argv $i]
#         }
#     }
# }
# file mkdir $report_dir
# set summary_file [open "$report_dir/synthesis_summary.csv" "w"]
# puts $summary_file "Module,LUTs,Registers,DSPs,BRAMs"
# close $summary_file
# if {$module_file != ""} {
#     if {[file exists $module_file]} {
#         set fp [open $module_file r]
#         set module_list {}
#         while {[gets $fp line] >= 0} {
#             set line [string trim $line]
#             if {$line != "" && [string index $line 0] != "#"} {
#                 lappend module_list $line
#             }
#         }
#         close $fp
#         puts "Loaded modules from file: $module_file"
#     } else {
#         puts "Error: Module file not found: $module_file"
#     }
# }
# if {[llength $module_list] == 0} {
#     puts "No module list specified, searching for all top modules in rtl directory..."
#     set verilog_files [glob -nocomplain "$rtl_dir/*.v" "$rtl_dir/*.sv"]
#     
#     foreach file $verilog_files {
#         set filename [file tail $file]
#         set module_name [file rootname $filename]
#         lappend module_list $module_name
#     }
# }
No module list specified, searching for all top modules in rtl directory...
# puts "Synthesizing the following modules: $module_list"
Synthesizing the following modules: lut_multiplier_no_dsp_quantization quantize_array
# puts "Using FPGA part: $part_name"
Using FPGA part: xc7z020clg484-1
# puts "RTL files directory: $rtl_dir"
RTL files directory: ../rtl
# puts "Using thread count: $nthreads"
Using thread count: 32
# foreach module $module_list {
#     puts "\n========================================="
#     puts "Starting synthesis for module: $module"
#     puts "=========================================\n"
#     
#     # Create module project directory
#     set proj_dir "./${module}_proj"
#     file mkdir $proj_dir
#     
#     # Create project
#     create_project ${module}_proj $proj_dir -part $part_name -force
#     set_property target_language Verilog [current_project]
#     
#     # Add all rtl files
#     add_files -norecurse [glob -nocomplain "$rtl_dir/*.v" "$rtl_dir/*.sv"]
#     update_compile_order -fileset sources_1
#     
#     # Set top module
#     set_property top $module [current_fileset]
#     
#     # Set synthesis options
#     set_property -name {STEPS.SYNTH_DESIGN.ARGS.MORE OPTIONS} -value {-mode out_of_context} -objects [get_runs synth_1]
#     
#     # Run synthesis
#     puts "Synthesizing module $module..."
#     reset_run synth_1
#     launch_runs synth_1 -jobs $nthreads
#     wait_on_run synth_1
#     
#     # Check if synthesis was successful
#     if {[get_property PROGRESS [get_runs synth_1]] != "100%"} {
#         puts "Error: Module $module synthesis failed!"
#         close_project
#         continue
#     }
#     
#     # Create module report directory
#     set module_report_dir "$report_dir/$module"
#     file mkdir $module_report_dir
#     
#     # Generate utilization report directly from the synthesis run
#     set utilization_rpt "$module_report_dir/utilization_synth.rpt"
#     open_run synth_1
#     report_utilization -file $utilization_rpt
#     
#     # Extract resource usage from the utilization report
#     set lut_count 0
#     set reg_count 0
#     set dsp_count 0
#     set bram_count 0
#     
#     # Parse the utilization report file to extract resource counts
#     if {[file exists $utilization_rpt]} {
#         set fp [open $utilization_rpt r]
#         set report_content [read $fp]
#         close $fp
#         
#         # Extract LUT usage
#         if {[regexp {CLB LUTs\*\s+\|\s+(\d+)} $report_content match lut_count]} {
#             puts "LUTs: $lut_count"
#         }
#         
#         # Extract register usage
#         if {[regexp {CLB Registers\s+\|\s+(\d+)} $report_content match reg_count]} {
#             puts "Registers: $reg_count"
#         }
#         
#         # Extract DSP usage
#         if {[regexp {DSPs\s+\|\s+(\d+)} $report_content match dsp_count]} {
#             puts "DSPs: $dsp_count"
#         }
#         
#         # Extract BRAM usage
#         if {[regexp {Block RAM Tile\s+\|\s+(\d+\.?\d*)} $report_content match bram_count]} {
#             puts "BRAMs: $bram_count"
#         }
#     }
#     
#     # Add to summary CSV
#     set summary_file [open "$report_dir/synthesis_summary.csv" "a"]
#     puts $summary_file "$module,$lut_count,$reg_count,$dsp_count,$bram_count"
#     close $summary_file
#     
#     # Save checkpoint
#     write_checkpoint -force "$module_report_dir/post_synth.dcp"
#     
#     # Close project
#     close_project
#     
#     puts "\nModule $module synthesis and resource report completed"
# }

=========================================
Starting synthesis for module: lut_multiplier_no_dsp_quantization
=========================================

INFO: [ProjectBase 1-489] The host OS only allows 260 characters in a normal path. The project is stored in a path with more than 80 characters. If you experience issues with IP, Block Designs, or files not being found, please consider moving the project to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter.
Current project path is 'C:/Users/wuche/Desktop/CODE/dat096/C2_image_compressing/saperate_module/3_quantization/synthesis_tests/lut_multiplier_no_dsp_quantization_proj'
Synthesizing module lut_multiplier_no_dsp_quantization...
CRITICAL WARNING: [filemgmt 20-742] The top module "lut_multiplier_no_dsp_quantization" specified for this project can not be validated. The current project is using automatic hierarchy update mode, and hence a new suitable replacement top will be automatically selected. If this is not desired, please change the hierarchy update mode to one of the manual compile order modes first, and then set top to any desired value.
Resolution: To switch to manual update order go to the Sources view, right-click on any node in the hierarchy and in the context menu select: 'Hierarchy Update' option 'No Update' or run the following Tcl Command: set_property source_mgmt_mode None [current_project] (which is the Manual Compile Order mode).
WARNING: [Vivado 12-7122] Auto Incremental Compile:: No reference checkpoint was found in run synth_1. Auto-incremental flow will not be run, the standard flow will be run instead.
[Thu May 15 13:04:31 2025] Launched synth_1...
Run output will be captured here: C:/Users/wuche/Desktop/CODE/dat096/C2_image_compressing/saperate_module/3_quantization/synthesis_tests/lut_multiplier_no_dsp_quantization_proj/lut_multiplier_no_dsp_quantization_proj.runs/synth_1/runme.log
[Thu May 15 13:04:31 2025] Waiting for synth_1 to finish...

*** Running vivado
    with args -log quantize_array.vds -m64 -product Vivado -mode batch -messageDb vivado.pb -notrace -source quantize_array.tcl



****** Vivado v2024.2 (64-bit)
  **** SW Build 5239630 on Fri Nov 08 22:35:27 MST 2024
  **** IP Build 5239520 on Sun Nov 10 16:12:51 MST 2024
  **** SharedData Build 5239561 on Fri Nov 08 14:39:27 MST 2024
  **** Start of session at: Thu May 15 13:04:32 2025
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.

source quantize_array.tcl -notrace
Command: synth_design -top quantize_array -part xc7z020clg484-1 -mode out_of_context
Starting synth_design
Attempting to get a license for feature 'Synthesis' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Synthesis' and/or device 'xc7z020'
INFO: [Synth 8-7079] Multithreading enabled for synth_design using a maximum of 2 processes.
INFO: [Synth 8-7078] Launching helper process for spawning children vivado processes
INFO: [Synth 8-7075] Helper process launched with PID 24380
---------------------------------------------------------------------------------
Starting Synthesize : Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 1128.711 ; gain = 469.871
---------------------------------------------------------------------------------
INFO: [Synth 8-6157] synthesizing module 'quantize_array' [C:/Users/wuche/Desktop/CODE/dat096/C2_image_compressing/saperate_module/3_quantization/rtl/quantize_array.sv:1]
ERROR: [Synth 8-439] module 'lut_multiplier_no_dsp_quantization' not found [C:/Users/wuche/Desktop/CODE/dat096/C2_image_compressing/saperate_module/3_quantization/rtl/quantize_array.sv:120]
	Parameter IN_W bound to: 32'sb00000000000000000000000000100000 
	Parameter CONST_W bound to: 32'sb00000000000000000000000000010000 
ERROR: [Synth 8-196] conditional expression could not be resolved to a constant [C:/Users/wuche/Desktop/CODE/dat096/C2_image_compressing/saperate_module/3_quantization/rtl/quantize_array.sv:115]
ERROR: [Synth 8-6156] failed synthesizing module 'quantize_array' [C:/Users/wuche/Desktop/CODE/dat096/C2_image_compressing/saperate_module/3_quantization/rtl/quantize_array.sv:1]
---------------------------------------------------------------------------------
Finished Synthesize : Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 1232.730 ; gain = 573.891
---------------------------------------------------------------------------------
synthesize failed
INFO: [Common 17-83] Releasing license: Synthesis
6 Infos, 0 Warnings, 0 Critical Warnings and 4 Errors encountered.
synth_design failed
ERROR: [Common 17-69] Command failed: Vivado Synthesis failed
INFO: [Common 17-206] Exiting Vivado at Thu May 15 13:04:46 2025...
[Thu May 15 13:04:46 2025] synth_1 finished
ERROR: [Vivado 12-13638] Failed runs(s) : 'synth_1'
wait_on_runs: Time (s): cpu = 00:00:00 ; elapsed = 00:00:15 . Memory (MB): peak = 678.219 ; gain = 0.000
ERROR: [Common 17-39] 'wait_on_runs' failed due to earlier errors.

    while executing
"wait_on_run synth_1"
    ("foreach" body line 28)
    invoked from within
"foreach module $module_list {
    puts "\n========================================="
    puts "Starting synthesis for module: $module"
    puts "=====..."
    (file "run_synthesis.tcl" line 93)
INFO: [Common 17-206] Exiting Vivado at Thu May 15 13:04:47 2025...
