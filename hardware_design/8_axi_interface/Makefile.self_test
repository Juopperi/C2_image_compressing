# Verilator configuration
VERILATOR = verilator
VERILATOR_FLAGS = --cc --trace --build -CFLAGS "-std=c++17" -LDFLAGS "-pthread" 
VERILATOR_FLAGS += -Wno-fatal
VERILATOR_FLAGS += --trace-max-array 512

# 设置Verilator输出目录
VERILATOR_OUTPUT = obj_dir

# Verilator包含目录
VERILATOR_INCLUDE = /usr/local/share/verilator/include

# Source files
VERILOG_SOURCES = axi_self_test.sv user_functional_module.sv
CPP_SOURCES = sim_main.cpp

# Output directory
OBJ_DIR = obj_dir
SIM_BINARY = $(OBJ_DIR)/Vaxi_self_test

# Target: full build
all: $(SIM_BINARY)

# 使用Verilator编译Verilog模块
$(SIM_BINARY): $(VERILOG_SOURCES) $(CPP_SOURCES)
	$(VERILATOR) $(VERILATOR_FLAGS) $(VERILOG_SOURCES) --top-module axi_self_test -o axi_self_test
	g++ -std=c++17 -I$(OBJ_DIR) -I$(VERILATOR_INCLUDE) -o $(SIM_BINARY) $(CPP_SOURCES) $(OBJ_DIR)/Vaxi_self_test__ALL.a $(VERILATOR_INCLUDE)/verilated.cpp $(VERILATOR_INCLUDE)/verilated_vcd_c.cpp $(VERILATOR_INCLUDE)/verilated_threads.cpp -pthread

# Run simulation
run: $(SIM_BINARY)
	./$(SIM_BINARY)

# Run with waveform viewer
wave: run
	gtkwave wave.vcd &

# Clean up
clean:
	rm -rf $(OBJ_DIR) *.vcd

.PHONY: all run wave clean
